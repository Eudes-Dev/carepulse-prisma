// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}

enum Gender {
  male
  female
  other
}

enum Status {
  pending
  scheduled
  cancelled
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  phone String?
  patient Patient?
}

model Patient {
  id String @id @default(uuid())
  gender String @default("male")
  address String
  occupation String
  emergencyContactName String
  emergencyContactNumber String
  primaryPhysician String
  insuranceProvider String
  insurancePolicyNumber String
  allergies String?
  currentMedication String?
  familyMedicalHistory String?
  pastMedicalHistory String?
  identificationType String?
  identificationNumber String?
  identificationDocument String?
  privacyConsent Boolean
  appointments Appointment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique
  user User @relation(fields: [userId], references: [id])
}


model Appointment {
  id String @id @default(uuid())
  primaryPhysician String
  reason String
  schedule DateTime
  status String @default("pending")
  note String?
  cancellationReason String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  patient    Patient   @relation(fields: [patientId], references: [id])
  patientId String
}